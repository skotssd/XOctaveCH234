## DO NOT EDIT!
## Generated automatically from fcnnpredict.cc
## by configure_make.m during package installation.

%!shared X, Y, MODEL
%! load fisheriris
%! X = meas;
%! Y = grp2idx (species);
%! MODEL = fcnntrain (X, Y, 10, [1, 1], 0.025, 100, false);
%!test
%! [Y_pred, Y_scores] = fcnnpredict (MODEL, X);
%! assert (numel (Y_pred), numel (Y));
%! assert (isequal (size (Y_pred), size (Y)), true);
%! assert (columns (Y_scores), numel (unique (Y)));
%! assert (rows (Y_scores), numel (Y));
%!error <fcnnpredict: too few input arguments.> ...
%! fcnnpredict (MODEL);
%!error <fcnnpredict: too many output arguments.> ...
%! [Q, W, E] = fcnnpredict (MODEL, X);
%!error <fcnnpredict: first argument must be a scalar structure.> ...
%! fcnnpredict (1, X);
%!error <fcnnpredict: first argument must be a scalar structure.> ...
%! fcnnpredict (struct ("L", {1, 2, 3}), X);
%!error <fcnnpredict: model does not have a 'LayerWeights' field.> ...
%! fcnnpredict (struct ("L", 1), X);
%!error <fcnnpredict: 'LayerWeights' must be a cell row vector.> ...
%! fcnnpredict (struct ("LayerWeights", 1), X);
%!error <fcnnpredict: 'LayerWeights' must be a cell row vector.> ...
%! fcnnpredict (struct ("LayerWeights", {1}), X);
%!error <fcnnpredict: 'LayerWeights' must be a cell row vector.> ...
%! fcnnpredict (struct ("LayerWeights", {{1; 2; 3}}), X);
%!error <fcnnpredict: model does not have an 'Activations' field.> ...
%! fcnnpredict (struct ("LayerWeights", {[{ones(3)},{ones(3)}]}, "R", 2), X);
%!error <fcnnpredict: 'Activations' must be a numeric row vector.> ...
%! fcnnpredict (struct ("LayerWeights", {[{ones(3)},{ones(3)}]}, ...
%!                      "Activations", [2]), X);
%!error <fcnnpredict: 'Activations' must be a numeric row vector.> ...
%! fcnnpredict (struct ("LayerWeights", {[{ones(3)},{ones(3)}]}, ...
%!                      "Activations", [2; 2]), X);
%!error <fcnnpredict: 'Activations' must be a numeric row vector.> ...
%! fcnnpredict (struct ("LayerWeights", {[{ones(3)},{ones(3)}]}, ...
%!                      "Activations", {{2, 2}}), X);
%!error <fcnnpredict: 'Activations' must be a numeric row vector.> ...
%! fcnnpredict (struct ("LayerWeights", {[{ones(3)},{ones(3)}]}, ...
%!                      "Activations", {{"sigmoid", "softmax"}}), X);
%!error <fcnnpredict: 'Activations' must be a numeric row vector.> ...
%! fcnnpredict (struct ("LayerWeights", {[{ones(3)},{ones(3)}]}, ...
%!                      "Activations", "sigmoid"), X);
%!error <fcnnpredict: XC must be a real numeric matrix.> ...
%! fcnnpredict (MODEL, complex (X));
%!error <fcnnpredict: XC must be a real numeric matrix.> ...
%! fcnnpredict (MODEL, {1, 2, 3, 4});
%!error <fcnnpredict: XC must be a real numeric matrix.> ...
%! fcnnpredict (MODEL, "asd");
%!error <fcnnpredict: XC cannot be empty.> ...
%! fcnnpredict (MODEL, []);
%!error <fcnnpredict: the features in XC do not match the trained model.> ...
%! fcnnpredict (MODEL, X(:,[1:3]));
