# doc-cache created by Octave 7.3.0
# name: cache
# type: cell
# rows: 3
# columns: 5
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 26
CalinskiHarabaszEvaluation


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 927
 -- statistics: OBJ = evalclusters (X, CLUST, CalinskiHarabasz)
 -- statistics: OBJ = evalclusters (..., Name, Value)

     A Calinski-Harabasz object to evaluate clustering solutions.

     A ‘CalinskiHarabaszEvaluation’ object is a ‘ClusterCriterion’
     object used to evaluate clustering solutions using the
     Calinski-Harabasz criterion.

     The Calinski-Harabasz index is based on the ratio between SSb and
     SSw.  SSb is the overall variance between clusters, that is the
     variance of the distances between the centroids.  SSw is the
     overall variance within clusters, that is the sum of the variances
     of the distances between each datapoint and its centroid.

     The best solution according to the Calinski-Harabasz criterion is
     the one that scores the highest value.

     See also: evalclusters, ClusterCriterion, DaviesBouldinEvaluation,
     GapEvaluation, SilhouetteEvaluation.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 60
A Calinski-Harabasz object to evaluate clustering solutions.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 16
ClusterCriterion


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1706
 -- statistics: OBJ = ClusterCriterion (X, CLUST, CRITERION)

     A clustering evaluation object as created by ‘evalclusters’.

     ‘ClusterCriterion’ is a superclass for clustering evaluation
     objects as created by ‘evalclusters’.

     List of public properties:
     ‘ClusteringFunction’
          a valid clustering funtion name or function handle.  It can be
          empty if the clustering solutions are passed as an input
          matric.

     ‘CriterionName’
          a valid criterion name to evaluate the clustering solutions.

     ‘CriterionValues’
          a vector of values as generated by the evaluation criterion
          for each clustering solution.

     ‘InspectedK’
          the list of proposed cluster numbers.

     ‘Missing’
          a logical vector of missing observations.  When there are
          ‘NaN’ values in the data matrix, the corresponding observation
          is excluded.

     ‘NumObservations’
          the number of non-missing observations in the data matrix.

     ‘OptimalK’
          the optimal number of clusters.

     ‘OptimalY’
          the clustering solution corresponding to ‘OptimalK’.

     ‘X’
          the data matrix.

     List of public methods:
     ‘addK’
          add a list of numbers of clusters to evaluate.

     ‘compact’
          return a compact clustering evaluation object.  Not
          implemented

     ‘plot’
          plot the clustering evaluation values against the
          corresponding number of clusters.

     See also: evalclusters, CalinskiHarabaszEvaluation,
     DaviesBouldinEvaluation, GapEvaluation, SilhouetteEvaluation.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 64
A clustering evaluation object as created by ‘evalclusters’.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 23
DaviesBouldinEvaluation


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 813
 -- Function File: OBJ = evalclusters (X, CLUST, DaviesBouldin)
 -- Function File: OBJ = evalclusters (..., Name, Value)

     A Davies-Bouldin object to evaluate clustering solutions.

     A ‘DaviesBouldinEvaluation’ object is a ‘ClusterCriterion’ object
     used to evaluate clustering solutions using the Davies-Bouldin
     criterion.

     The Davies-Bouldin criterion is based on the ratio between the
     distances between clusters and within clusters, that is the
     distances between the centroids and the distances between each
     datapoint and its centroid.

     The best solution according to the Davies-Bouldin criterion is the
     one that scores the lowest value.

     See also: evalclusters, ClusterCriterion,
     CalinskiHarabaszEvaluation, GapEvaluation, SilhouetteEvaluation.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 57
A Davies-Bouldin object to evaluate clustering solutions.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 13
GapEvaluation


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1983
 -- statistics: OBJ = evalclusters (X, CLUST, gap)
 -- statistics: OBJ = evalclusters (..., Name, Value)

     A gap object to evaluate clustering solutions.

     A ‘GapEvaluation’ object is a ‘ClusterCriterion’ object used to
     evaluate clustering solutions using the gap criterion, which is a
     mathematical formalization of the elbow method.

     List of public properties specific to ‘SilhouetteEvaluation’:
     ‘B’
          the number of reference datasets to generate.

     ‘Distance’
          a valid distance metric name, or a function handle as accepted
          by the ‘pdist’ function.

     ‘ExpectedLogW’
          a vector of the expected values for the logarithm of the
          within clusters dispersion.

     ‘LogW’
          a vector of the values of the logarithm of the within clusters
          dispersion.

     ‘ReferenceDistribution’
          a valid name for the reference distribution, namely: ‘PCA’
          (default) or ‘uniform’.

     ‘SE’
          a vector of the standard error of the expected values for the
          logarithm of the within clusters dispersion.

     ‘SearchMethod’
          a valid name for the search method to use: ‘globalMaxSE’
          (default) or ‘firstMaxSE’.

     ‘StdLogW’
          a vector of the standard deviation of the expected values for
          the logarithm of the within clusters dispersion.

     The best solution according to the gap criterion depends on the
     chosen search method.  When the search method is ‘globalMaxSE’, the
     chosen gap value is the smaller one which is inside a standard
     error from the max gap value; when the search method is
     ‘firstMaxSE’, the chosen gap value is the first one which is inside
     a standard error from the next gap value.

     See also: evalclusters, ClusterCriterion,
     CalinskiHarabaszEvaluation, DaviesBouldinEvaluation,
     SilhouetteEvaluation.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 46
A gap object to evaluate clustering solutions.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 20
SilhouetteEvaluation


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1079
 -- Function File: OBJ = evalclusters (X, CLUST, silhouette)
 -- Function File: OBJ = evalclusters (..., Name, Value)

     A silhouette object to evaluate clustering solutions.

     A ‘SilhouetteEvaluation’ object is a ‘ClusterCriterion’ object used
     to evaluate clustering solutions using the silhouette criterion.

     List of public properties specific to ‘SilhouetteEvaluation’:
     ‘Distance’
          a valid distance metric name, or a function handle or a
          numeric array as generated by the ‘pdist’ function.

     ‘ClusterPriors’
          a valid name for the evaluation of silhouette values:
          ‘empirical’ (default) or ‘equal’.

     ‘ClusterSilhouettes’
          a cell array with the silhouette values of each data point for
          each cluster number.

     The best solution according to the silhouette criterion is the one
     that scores the highest average silhouette value.

     See also: evalclusters, ClusterCriterion,
     CalinskiHarabaszEvaluation, DaviesBouldinEvaluation, GapEvaluation.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 53
A silhouette object to evaluate clustering solutions.





