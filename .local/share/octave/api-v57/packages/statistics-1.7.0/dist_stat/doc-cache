# doc-cache created by Octave 7.3.0
# name: cache
# type: cell
# rows: 3
# columns: 34
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
betastat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 597
 -- statistics: [M, V] = betastat (A, B)

     Compute statistics of the Beta distribution.

     ‘[M, V] = betastat (A, B)’ returns the mean and variance of the
     Beta distribution with shape parameters A and B.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the Beta distribution can be found at
     <https://en.wikipedia.org/wiki/Beta_distribution>

     See also: betacdf, betainv, betapdf, betarnd, betafit, betalike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 44
Compute statistics of the Beta distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
binostat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 700
 -- statistics: [M, V] = binostat (N, PS)

     Compute statistics of the binomial distribution.

     ‘[M, V] = binostat (N, PS)’ returns the mean and variance of the
     binomial distribution with parameters N and PS, where N is the
     number of trials and PS is the probability of success.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the binomial distribution can be found at
     <https://en.wikipedia.org/wiki/Binomial_distribution>

     See also: binocdf, binoinv, binopdf, binornd, binofit, binolike,
     binotest.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 48
Compute statistics of the binomial distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
bisastat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 703
 -- statistics: [M, V] = bisastat (BETA, GAMMA)

     Compute statistics of the Birnbaum-Saunders distribution.

     ‘[M, V] = bisastat (BETA, GAMMA)’ returns the mean and variance of
     the Birnbaum-Saunders distribution with scale parameter BETA and
     shape parameter GAMMA.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the Birnbaum-Saunders distribution can be
     found at
     <https://en.wikipedia.org/wiki/Birnbaum%E2%80%93Saunders_distribution>

     See also: bisacdf, bisainv, bisapdf, bisarnd, bisafit, bisalike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 57
Compute statistics of the Birnbaum-Saunders distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
burrstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 683
 -- statistics: [M, V] = burrstat (LAMBDA, C, K)

     Compute statistics of the Burr type XII distribution.

     ‘[M, V] = burrstat (LAMBDA, C, K)’ returns the mean and variance of
     the Burr type XII distribution with scale parameter LAMBDA, first
     shape parameter C, and second shape parameter K.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the Burr distribution can be found at
     <https://en.wikipedia.org/wiki/Burr_distribution>

     See also: gevcdf, gevinv, gevpdf, gevrnd, gevfit, gevlike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 53
Compute statistics of the Burr type XII distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
chi2stat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 506
 -- statistics: [M, V] = chi2stat (DF)

     Compute statistics of the chi-squared distribution.

     ‘[M, V] = chi2stat (DF)’ returns the mean and variance of the
     chi-squared distribution with DF degrees of freedom.

     The size of M (mean) and V (variance) is the same size of the input
     argument.

     Further information about the chi-squared distribution can be found
     at <https://en.wikipedia.org/wiki/Chi-squared_distribution>

     See also: chi2cdf, chi2inv, chi2pdf, chi2rnd.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 51
Compute statistics of the chi-squared distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
evstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1061
 -- statistics: [M, V] = evstat (MU, SIGMA)

     Compute statistics of the extreme value distribution.

     ‘[M, V] = evstat (MU, SIGMA)’ returns the mean and variance of the
     extreme value distribution (also known as the Gumbel or the type I
     generalized extreme value distribution) with location parameter MU
     and scale parameter SIGMA.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     The type 1 extreme value distribution is also known as the Gumbel
     distribution.  This version is suitable for modeling minima.  The
     mirror image of this distribution can be used to model maxima by
     negating X.  If Y has a Weibull distribution, then ‘X = log (Y)’
     has the type 1 extreme value distribution.

     Further information about the Gumbel distribution can be found at
     <https://en.wikipedia.org/wiki/Gumbel_distribution>

     See also: evcdf, evinv, evpdf, evrnd, evfit, evlike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 53
Compute statistics of the extreme value distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
expstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 818
 -- statistics: [M, V] = expstat (MU)

     Compute statistics of the exponential distribution.

     ‘[M, V] = expstat (MU)’ returns the mean and variance of the
     exponential distribution with mean parameter MU.

     The size of M (mean) and V (variance) is the same size of the input
     argument.

     A common alternative parameterization of the exponential
     distribution is to use the parameter λ defined as the mean number
     of events in an interval as opposed to the parameter μ, which is
     the mean wait time for an event to occur.  λ and μ are reciprocals,
     i.e.  μ = 1 / λ.

     Further information about the exponential distribution can be found
     at <https://en.wikipedia.org/wiki/Exponential_distribution>

     See also: expcdf, expinv, exppdf, exprnd, expfit, explike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 51
Compute statistics of the exponential distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
fstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 562
 -- statistics: [M, V] = fstat (DF1, DF2)

     Compute statistics of the F-distribution.

     ‘[M, V] = fstat (DF1, DF2)’ returns the mean and variance of the
     F-distribution with DF1 and DF2 degrees of freedom.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the F-distribution can be found at
     <https://en.wikipedia.org/wiki/F-distribution>

     See also: fcdf, finv, fpdf, frnd.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 41
Compute statistics of the F-distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
gamstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1034
 -- statistics: [M, V] = gamstat (A, B)

     Compute statistics of the Gamma distribution.

     ‘[M, V] = gamstat (A, B)’ returns the mean and variance of the
     Gamma distribution with shape parameter A and scale parameter B.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     OCTAVE/MATLAB use the alternative parameterization given by the
     pair α, β, i.e.  shape A and scale B.  In Wikipedia, the two common
     parameterizations use the pairs k, θ, as shape and scale, and α, β,
     as shape and rate, respectively.  The parameter names A and B used
     here (for MATLAB compatibility) correspond to the parameter
     notation k, θ instead of the α, β as reported in Wikipedia.

     Further information about the Gamma distribution can be found at
     <https://en.wikipedia.org/wiki/Gamma_distribution>

     See also: gamcdf, gaminv, gampdf, gamrnd, gamfit, gamlike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 45
Compute statistics of the Gamma distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
geostat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 514
 -- statistics: [M, V] = geostat (PS)

     Compute statistics of the geometric distribution.

     ‘[M, V] = geostat (PS)’ returns the mean and variance of the
     geometric distribution with probability of success parameter PS.

     The size of M (mean) and V (variance) is the same size of the input
     argument.

     Further information about the geometric distribution can be found
     at <https://en.wikipedia.org/wiki/Geometric_distribution>

     See also: geocdf, geoinv, geopdf, geornd, geofit.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 49
Compute statistics of the geometric distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
gevstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 970
 -- statistics: [M, V] = gevstat (K, SIGMA, MU)

     Compute statistics of the generalized extreme value distribution.

     ‘[M, V] = gevstat (K, SIGMA, MU)’ returns the mean and variance of
     the generalized extreme value distribution with shape parameter K,
     scale parameter SIGMA, and location parameter MU.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     The mean of the GEV distribution is not finite when K >= 1, and the
     variance is not finite when K >= 1/2.  The GEV distribution has
     positive density only for values of X such that K * (X - MU) /
     SIGMA > -1.

     Further information about the generalized extreme value
     distribution can be found at
     <https://en.wikipedia.org/wiki/Generalized_extreme_value_distribution>

     See also: gevcdf, gevinv, gevpdf, gevrnd, gevfit, gevlike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 65
Compute statistics of the generalized extreme value distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
gpstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1290
 -- statistics: [M, V] = gpstat (K, SIGMA, THETA)

     Compute statistics of the generalized Pareto distribution.

     ‘[M, V] = gpstat (K, SIGMA, THETA)’ returns the mean and variance
     of the generalized Pareto distribution with shape parameter K,
     scale parameter SIGMA, and location parameter THETA.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     When K = 0 and THETA = 0, the generalized Pareto distribution is
     equivalent to the exponential distribution.  When ‘K > 0’ and
     ‘THETA = SIGMA / K’, the generalized Pareto distribution is
     equivalent to the Pareto distribution.  The mean of the generalized
     Pareto distribution is not finite when ‘K >= 1’, and the variance
     is not finite when ‘K >= 1/2’.  When ‘K >= 0’, the generalized
     Pareto distribution has positive density for ‘X > THETA’, or, when
     ‘K < 0’, for ‘0 <= (X - THETA) / SIGMA <= -1 / K’.

     Further information about the generalized Pareto distribution can
     be found at
     <https://en.wikipedia.org/wiki/Generalized_Pareto_distribution>

     See also: gpcdf, gpinv, gppdf, gprnd, gpfit, gplike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 58
Compute statistics of the generalized Pareto distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
hnstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 676
 -- statistics: [M, V] = hnstat (MU, SIGMA)

     Compute statistics of the half-normal distribution.

     ‘[M, V] = hnstat (MU, SIGMA)’ returns the mean and variance of the
     half-normal distribution with non-centrality (distance) parameter
     MU and scale parameter SIGMA.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the half-normal distribution can be found
     at <https://en.wikipedia.org/wiki/Half-normal_distribution>

     See also: norminv, norminv, normpdf, normrnd, normfit, normlike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 51
Compute statistics of the half-normal distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
hygestat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1076
 -- statistics: [MN, V] = hygestat (M, K, N)

     Compute statistics of the hypergeometric distribution.

     ‘[MN, V] = hygestat (M, K, N)’ returns the mean and variance of the
     hypergeometric distribution parameters M, K, and N.

        • M is the total size of the population of the hypergeometric
          distribution.  The elements of M must be positive natural
          numbers.

        • K is the number of marked items of the hypergeometric
          distribution.  The elements of K must be natural numbers.

        • N is the size of the drawn sample of the hypergeometric
          distribution.  The elements of N must be positive natural
          numbers.

     The size of MN (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the hypergeometric distribution can be
     found at
     <https://en.wikipedia.org/wiki/Hypergeometric_distribution>

     See also: hygecdf, hygeinv, hygepdf, hygernd.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 54
Compute statistics of the hypergeometric distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
invgstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 687
 -- statistics: [M, V] = invgstat (MU, LAMBDA)

     Compute statistics of the inverse Gaussian distribution.

     ‘[M, V] = invgstat (MU, LAMBDA)’ returns the mean and variance of
     the inverse Gaussian distribution with mean parameter MU and shape
     parameter LAMBDA.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the inverse Gaussian distribution can be
     found at
     <https://en.wikipedia.org/wiki/Inverse_Gaussian_distribution>

     See also: invgcdf, invginv, invgpdf, invgrnd, invgfit, invglike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 56
Compute statistics of the inverse Gaussian distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
logistat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 647
 -- statistics: [M, V] = logistat (MU, SIGMA)

     Compute statistics of the logistic distribution.

     ‘[M, V] = logistat (MU, SIGMA)’ returns the mean and variance of
     the logistic distribution with mean parameter MU and scale
     parameter SIGMA.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the logistic distribution can be found at
     <https://en.wikipedia.org/wiki/Logistic_distribution>

     See also: logicdf, logiinv, logipdf, logirnd, logifit, logilike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 48
Compute statistics of the logistic distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
loglstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 950
 -- statistics: [M, V] = loglstat (MU, SIGMA)

     Compute statistics of the loglogistic distribution.

     ‘[M, V] = loglstat (MU, SIGMA)’ returns the mean and variance of
     the loglogistic distribution with mean parameter MU and scale
     parameter SIGMA.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the loglogistic distribution can be found
     at <https://en.wikipedia.org/wiki/Log-logistic_distribution>

     OCTAVE/MATLAB use an alternative parameterization given by the pair
     μ, σ, i.e.  MU and SIGMA, in analogy with the logistic
     distribution.  Their relation to the α and b parameters used in
     Wikipedia are given below:

        • MU = log (A)
        • SIGMA = 1 / A

     See also: logncdf, logninv, lognpdf, lognrnd, lognfit, lognlike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 51
Compute statistics of the loglogistic distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
lognstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 728
 -- statistics: [M, V] = lognstat (MU, SIGMA)

     Compute statistics of the lognormal distribution.

     ‘[M, V] = lognstat (MU, SIGMA)’ returns the mean and variance of
     the lognormal distribution with mean parameter MU and standard
     deviation parameter SIGMA, each corresponding to the associated
     normal distribution.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the lognormal distribution can be found
     at <https://en.wikipedia.org/wiki/Log-normal_distribution>

     See also: logncdf, logninv, lognpdf, lognrnd, lognfit, lognlike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 49
Compute statistics of the lognormal distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
nakastat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 647
 -- statistics: [M, V] = nakastat (MU, OMEGA)

     Compute statistics of the Nakagami distribution.

     ‘[M, V] = nakastat (MU, OMEGA)’ returns the mean and variance of
     the Nakagami distribution with shape parameter MU and spread
     parameter OMEGA.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the Nakagami distribution can be found at
     <https://en.wikipedia.org/wiki/Normal_distribution>

     See also: nakacdf, nakainv, nakapdf, nakarnd, nakafit, nakalike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 48
Compute statistics of the Nakagami distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
nbinstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 825
 -- statistics: [M, V] = nbinstat (R, PS)

     Compute statistics of the negative binomial distribution.

     ‘[M, V] = nbinstat (R, PS)’ returns the mean and variance of the
     negative binomial distribution with parameters R and PS, where R is
     the number of successes until the experiment is stopped and PS is
     the probability of success in each experiment, given the number of
     failures in X.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the negative binomial distribution can be
     found at
     <https://en.wikipedia.org/wiki/Negative_binomial_distribution>

     See also: nbincdf, nbininv, nbininv, nbinrnd, nbinfit, nbinlike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 57
Compute statistics of the negative binomial distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
ncfstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 682
 -- statistics: [M, V] = ncfstat (DF1, DF1, LAMBDA)

     Compute statistics for the noncentral F-distribution.

     ‘[M, V] = ncfstat (DF1, DF1, LAMBDA)’ returns the mean and variance
     of the noncentral F-distribution with DF1 and DF2 degrees of
     freedom and noncentrality parameter LAMBDA.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the noncentral F-distribution can be
     found at <https://en.wikipedia.org/wiki/Noncentral_F-distribution>

     See also: ncfcdf, ncfinv, ncfpdf, ncfrnd, fstat.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 53
Compute statistics for the noncentral F-distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
nctstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 649
 -- statistics: [M, V] = nctstat (DF, MU)

     Compute statistics for the noncentral t-distribution.

     ‘[M, V] = nctstat (DF, MU)’ returns the mean and variance of the
     noncentral t-distribution with DF degrees of freedom and
     noncentrality parameter MU.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the noncentral t-distribution can be
     found at <https://en.wikipedia.org/wiki/Noncentral_t-distribution>

     See also: nctcdf, nctinv, nctpdf, nctrnd, tstat.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 53
Compute statistics for the noncentral t-distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
ncx2stat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 705
 -- statistics: [M, V] = ncx2stat (DF, LAMBDA)

     Compute statistics for the noncentral chi-squared distribution.

     ‘[M, V] = ncx2stat (DF, LAMBDA)’ returns the mean and variance of
     the noncentral chi-squared distribution with DF degrees of freedom
     and noncentrality parameter LAMBDA.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the noncentral chi-squared distribution
     can be found at
     <https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution>

     See also: ncx2cdf, ncx2inv, ncx2pdf, ncx2rnd.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 63
Compute statistics for the noncentral chi-squared distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
normstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 660
 -- statistics: [M, V] = normstat (MU, SIGMA)

     Compute statistics of the normal distribution.

     ‘[M, V] = normstat (MU, SIGMA)’ returns the mean and variance of
     the normal distribution with non-centrality (distance) parameter MU
     and scale parameter SIGMA.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the normal distribution can be found at
     <https://en.wikipedia.org/wiki/Normal_distribution>

     See also: norminv, norminv, normpdf, normrnd, normfit, normlike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 46
Compute statistics of the normal distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
plstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 623
 -- statistics: [M, V] = plstat (X, FX)

     Compute statistics of the piecewise linear distribution.

     ‘[M, V] = plstat (X, FX)’ returns the mean, M, and variance, V, of
     the piecewise linear distribution with a vector of X values at
     which the CDF changes slope and a vector of CDF values FX that
     correspond to each value in X.  Both X and FX must be vectors of
     the same size and at least 2-elements long.

     Further information about the piecewise linear distribution can be
     found at <https://en.wikipedia.org/wiki/Piecewise_linear_function>

     See also: plcdf, plinv, plpdf, plrnd.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 56
Compute statistics of the piecewise linear distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
poisstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 528
 -- statistics: [M, V] = poisstat (LAMBDA)

     Compute statistics of the Poisson distribution.

     ‘[M, V] = poisstat (LAMBDA)’ returns the mean and variance of the
     Poisson distribution with rate parameter LAMBDA.

     The size of M (mean) and V (variance) is the same size of the input
     argument.

     Further information about the Poisson distribution can be found at
     <https://en.wikipedia.org/wiki/Poisson_distribution>

     See also: poisscdf, poissinv, poisspdf, poissrnd, poissfit,
     poisslike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 47
Compute statistics of the Poisson distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
raylstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 519
 -- statistics: [M, V] = raylstat (SIGMA)

     Compute statistics of the Rayleigh distribution.

     ‘[M, V] = raylstat (SIGMA)’ returns the mean and variance of the
     Rayleigh distribution with scale parameter SIGMA.

     The size of M (mean) and V (variance) is the same size of the input
     argument.

     Further information about the Rayleigh distribution can be found at
     <https://en.wikipedia.org/wiki/Rayleigh_distribution>

     See also: raylcdf, raylinv, raylpdf, raylrnd, raylfit, rayllike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 48
Compute statistics of the Rayleigh distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
ricestat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 655
 -- statistics: [M, V] = ricestat (S, SIGMA)

     Compute statistics of the Rician distribution.

     ‘[M, V] = ricestat (S, SIGMA)’ returns the mean and variance of the
     Rician distribution with non-centrality (distance) parameter S and
     scale parameter SIGMA.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the Rician distribution can be found at
     <https://en.wikipedia.org/wiki/Rice_distribution>

     See also: ricecdf, riceinv, ricepdf, ricernd, ricefit, ricelike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 46
Compute statistics of the Rician distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
tlsstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 775
 -- statistics: [M, V] = tlsstat (MU, SIGMA, NU)

     Compute statistics of the location-scale Student’s T distribution.

     ‘[M, V] = tlsstat (MU, SIGMA, NU)’ returns the mean and variance of
     the location-scale Student’s T distribution with location parameter
     MU, scale parameter SIGMA, and NU degrees of freedom.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the location-scale Student’s T
     distribution can be found at
     <https://en.wikipedia.org/wiki/Student%27s_t-distribution#Location-scale_t_distribution>

     See also: tlscdf, tlsinv, tlspdf, tlsrnd, tlsfit, tlslike.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 68
Compute statistics of the location-scale Student’s T distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
tristat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1166
 -- statistics: [M, V] = tristat (A, B, C)

     Compute statistics of the Triangular distribution.

     ‘[M, V] = tristat (A, B, C)’ returns the mean and variance of the
     Triangular distribution with lower limit parameter A, peak location
     (mode) parameter B, and upper limit parameter C.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Note that the order of the parameter input arguments has been
     changed after statistics version 1.6.3 in order to be MATLAB
     compatible with the parameters used in the TriangularDistribution
     probability distribution object.  More specifically, the positions
     of the parameters B and C have been swapped.  As a result, the
     naming conventions no longer coinside with those used in Wikipedia,
     in which b denotes the upper limit and c denotes the mode or peak
     parameter.

     Further information about the triangular distribution can be found
     at <https://en.wikipedia.org/wiki/Triangular_distribution>

     See also: tcdf, tinv, tpdf, trnd.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 50
Compute statistics of the Triangular distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
tstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 496
 -- statistics: [M, V] = tstat (DF)

     Compute statistics of the Student’s T distribution.

     ‘[M, V] = tstat (DF)’ returns the mean and variance of the
     Student’s T distribution with DF degrees of freedom.

     The size of M (mean) and V (variance) is the same size of the input
     argument.

     Further information about the Student’s T distribution can be found
     at <https://en.wikipedia.org/wiki/Student%27s_t-distribution>

     See also: tcdf, tinv, tpdf, trnd.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 53
Compute statistics of the Student’s T distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
unidstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 651
 -- statistics: [M, V] = unidstat (DF)

     Compute statistics of the discrete uniform cumulative distribution.

     ‘[M, V] = unidstat (DF)’ returns the mean and variance of the
     discrete uniform cumulative distribution with parameter N, which
     corresponds to the maximum observable value and must be a positive
     natural number.

     The size of M (mean) and V (variance) is the same size of the input
     argument.

     Further information about the discrete uniform distribution can be
     found at
     <https://en.wikipedia.org/wiki/Discrete_uniform_distribution>

     See also: unidcdf, unidinv, unidpdf, unidrnd, unidfit.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 67
Compute statistics of the discrete uniform cumulative distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
unifstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 733
 -- statistics: [M, V] = unifstat (DF)

     Compute statistics of the continuous uniform cumulative
     distribution.

     ‘[M, V] = unifstat (DF)’ returns the mean and variance of the
     continuous uniform cumulative distribution with parameters A and B,
     which define the lower and upper bounds of the interval [A, B].

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the continuous uniform distribution can
     be found at
     <https://en.wikipedia.org/wiki/Continuous_uniform_distribution>

     See also: unifcdf, unifinv, unifpdf, unifrnd, unifit.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 69
Compute statistics of the continuous uniform cumulative distribution.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
wblstat


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 645
 -- statistics: [M, V] = wblstat (LAMBDA, K)

     Compute statistics of the Weibull distribution.

     ‘[M, V] = wblstat (LAMBDA, K)’ returns the mean and variance of the
     Weibull distribution with scale parameter LAMBDA and shape
     parameter K.

     The size of M (mean) and V (variance) is the common size of the
     input arguments.  A scalar input functions as a constant matrix of
     the same size as the other inputs.

     Further information about the Weibull distribution can be found at
     <https://en.wikipedia.org/wiki/Weibull_distribution>

     See also: wblcdf, wblinv, wblpdf, wblrnd, wblfit, wbllike, wblplot.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 47
Compute statistics of the Weibull distribution.





